{"version":3,"file":"pkd_connector.js","mappings":"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","sources":["webpack://chatapp/webpack/bootstrap","webpack://chatapp/webpack/runtime/define property getters","webpack://chatapp/webpack/runtime/hasOwnProperty shorthand","webpack://chatapp/webpack/runtime/make namespace object","webpack://chatapp/./node_modules/engine.io-parser/build/esm/commons.js","webpack://chatapp/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://chatapp/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://chatapp/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://chatapp/./node_modules/engine.io-parser/build/esm/index.js","webpack://chatapp/./node_modules/@socket.io/component-emitter/lib/esm/index.js","webpack://chatapp/./node_modules/engine.io-client/build/esm/globals.js","webpack://chatapp/./node_modules/engine.io-client/build/esm/util.js","webpack://chatapp/./node_modules/engine.io-client/build/esm/transport.js","webpack://chatapp/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://chatapp/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://chatapp/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://chatapp/./node_modules/engine.io-client/build/esm/transports/polling-xhr.js","webpack://chatapp/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://chatapp/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://chatapp/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://chatapp/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://chatapp/./node_modules/engine.io-client/build/esm/socket.js","webpack://chatapp/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://chatapp/./node_modules/socket.io-parser/build/esm/binary.js","webpack://chatapp/./node_modules/socket.io-parser/build/esm/index.js","webpack://chatapp/./node_modules/socket.io-client/build/esm/on.js","webpack://chatapp/./node_modules/socket.io-client/build/esm/socket.js","webpack://chatapp/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://chatapp/./node_modules/socket.io-client/build/esm/manager.js","webpack://chatapp/./node_modules/socket.io-client/build/esm/index.js","webpack://chatapp/./node_modules/socket.io-client/build/esm/url.js","webpack://chatapp/./static/js/connector.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { io } from \"socket.io-client\";\n\n// Initialize polling when page loads\nlet lastPolledMessage = '';\nlet users = []; // Track active users\nconst userList = document.getElementById('user-list');\nconst onlineCount = document.getElementById('online-count');\nconst usernameInput = document.getElementById('username-input');\n\n// Debug mode\nconst DEBUG = true;\n\nfunction debugLog(...args) {\n    if (DEBUG) {\n        console.log('[WebSocket]', ...args);\n    }\n}\n// Update initial user list\nupdateUserList();\n\n// WebSocket implementation\nclass ChatWebSocket {\n    constructor() {\n        this.socket = null;\n        this.reconnectAttempts = 0;\n        this.maxReconnectAttempts = 5;\n        this.reconnectDelay = 1000;\n        this.isConnected = false;\n        this.pendingMessages = new Set(); // Track messages being sent\n    }\n\n    connect() {\n        try {\n            debugLog('Attempting to connect to WebSocket...');\n\n            // Explicitly specify the WebSocket URL\n            this.socket = io('http://localhost:8080', {\n                transports: ['websocket', 'polling'], // Try both transports\n                timeout: 5000\n            });\n            this.socket.on('connect', () => {\n                debugLog('✅ WebSocket CONNECTED successfully');\n                this.isConnected = true;\n                this.reconnectAttempts = 0;\n                updateConnectionStatus(true);\n\n                // Register user with the server\n                const username = usernameInput.value.trim() || 'Anonymous';\n                this.socket.emit('user_join', { username: username });\n\n                // Start polling as fallback\n                this.startPollingFallback();\n            });\n\n            this.socket.on('disconnect', (reason) => {\n                debugLog('❌ WebSocket DISCONNECTED:', reason);\n                this.isConnected = false;\n                updateConnectionStatus(false);\n\n                if (reason === 'io server disconnect') {\n                    // Server initiated disconnect, don't auto-reconnect\n                    showNotification('Disconnected by server', 'error');\n                } else {\n                    this.attemptReconnect();\n                }\n            });\n\n            this.socket.on('connect_error', (error) => {\n                debugLog('💥 WebSocket CONNECTION ERROR:', error);\n                this.isConnected = false;\n                updateConnectionStatus(false);\n            });\n\n            this.socket.on('connected', (data) => {\n                debugLog('📨 Received connected event:', data);\n                showNotification(data.message, 'success');\n            });\n\n            this.socket.on('new_message', (data) => {\n                debugLog('📨 Received new message:', data);\n                this.handleNewMessage(data);\n            });\n\n            this.socket.on('user_list_update', (data) => {\n                debugLog('📨 Received user list update:', data);\n                this.handleUserListUpdate(data);\n            });\n\n            this.socket.on('user_joined', (data) => {\n                debugLog('📨 Received user joined confirmation:', data);\n                this.handleUserJoined(data);\n            });\n\n            this.socket.on('system_message', (data) => {\n                this.handleSystemMessage(data);\n            });\n\n        } catch (error) {\n            debugLog('💥 WebSocket connection failed:', error);\n            console.error('WebSocket connection failed:', error);\n            this.attemptReconnect();\n        }\n    }\n\n    handleNewMessage(data) {\n        const isOwnMessage = data.username === usernameInput.value.trim();\n\n        // Don't show own messages twice (they're already shown optimistically)\n        if (!isOwnMessage || !this.pendingMessages.has(data.text)) {\n            addMessage(data.username, data.text, isOwnMessage);\n\n            // Scroll to bottom\n            messagesContainer.scrollTop = messagesContainer.scrollHeight;\n\n            // Play notification sound for others' messages\n            if (!isOwnMessage && soundToggle.checked) {\n                playNotificationSound();\n            }\n        }\n\n        // Remove from pending if it was there\n        this.pendingMessages.delete(data.text);\n    }\n\n    handleUserListUpdate(data) {\n        users = data.users.filter(user => user !== usernameInput.value.trim());\n        updateUserList();\n    }\n\n    handleUserJoined(data) {\n        showNotification(`${data.username} joined the chat`);\n    }\n\n    handleSystemMessage(data) {\n        showNotification(data.message, 'info');\n    }\n\n    attemptReconnect() {\n        if (this.reconnectAttempts < this.maxReconnectAttempts) {\n            this.reconnectAttempts++;\n            const delay = this.reconnectDelay * this.reconnectAttempts;\n            debugLog(`🔄 Attempting to reconnect in ${delay}ms... (${this.reconnectAttempts}/${this.maxReconnectAttempts})`);\n            console.log(`Attempting to reconnect in ${delay}ms... (${this.reconnectAttempts}/${this.maxReconnectAttempts})`);\n\n            setTimeout(() => {\n                this.connect();\n            }, delay);\n        } else {\n            console.error('Max reconnection attempts reached');\n            showNotification('Connection lost. Please refresh the page.', 'error');\n        }\n    }\n\n    startPollingFallback() {\n        // Only start polling if WebSocket is not connected after a delay\n        setTimeout(() => {\n            if (!this.isConnected) {\n                console.log('Starting polling fallback');\n                pollForMessages();\n            }\n        }, 5000);\n    }\n\n    disconnect() {\n        if (this.socket) {\n            this.socket.disconnect();\n            this.socket = null;\n        }\n        this.isConnected = false;\n        this.pendingMessages.clear();\n    }\n}\n\n// Initialize WebSocket when page loads\nconst chatSocket = new ChatWebSocket();\n\ndebugLog('DOM loaded, starting WebSocket connection...');\nchatSocket.connect();\n\n// Add connection button for manual testing\naddConnectionControls();\n\nlet connectionStDisplay\n\nfunction addConnectionControls() {\n    if (!connectionStDisplay) {\n        const controls = document.createElement('div');\n        controls.innerHTML = `\n    <div id=\"connection-status\" class=\"block fixed top-2 right-3 bg-white p-4 border border-[#ccc] z-[50] rounded-lg\">\n    <div>WebSocket Status: <span id=\"debug-status\" class=\"font-semibold text-red-500\">Disconnected</span></div>\n    <button class=\"rounded-md border shadow-lg p-1\" onclick=\"chatSocket.connect()\">Connect</button>\n    <button class=\"rounded-md border shadow-lg p-1\" onclick=\"chatSocket.disconnect()\">Disconnect</button>\n    <button class=\"rounded-md border shadow-lg p-1\" onclick=\"testConnection()\">Test</button>\n    </div>\n    `;\n        document.body.appendChild(controls);\n        connectionStDisplay = controls\n    } else {\n        connectionStDisplay.classList.remove('hidden')\n    }\n    setTimeout(() => {\n        connectionStDisplay.classList.add('hidden')\n    }, 3000)\n}\n\nfunction testConnection() {\n    debugLog('Testing connection...');\n    if (chatSocket.isConnected) {\n        debugLog('✅ WebSocket is connected');\n        chatSocket.socket.emit('user_join', { username: 'TestUser' });\n    } else {\n        debugLog('❌ WebSocket is not connected');\n    }\n}\n\n\n// Update username when it changes\nusernameInput.addEventListener('change', function() {\n    if (chatSocket.isConnected && chatSocket.socket) {\n        const username = usernameInput.value.trim() || 'Anonymous';\n        chatSocket.socket.emit('user_join', { username: username });\n    }\n});\n\n// Refined sendMessage function\nasync function sendMessage() {\n    const message = messageInput.value.trim();\n    const username = usernameInput.value.trim() || 'Anonymous';\n\n    if (!message) {\n        return; // Don't send empty messages\n    }\n\n    // Clear input immediately for better UX\n    messageInput.value = '';\n    updateCharCount();\n    typingIndicator.classList.add('hidden');\n\n    // Add message to UI optimistically\n    const messageId = Date.now().toString();\n    addMessage(username, message, true, false, messageId);\n\n    // Scroll to bottom\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n\n    try {\n        if (chatSocket.isConnected && chatSocket.socket) {\n            // Mark as pending for WebSocket\n            chatSocket.pendingMessages.add(message);\n\n            const response = await fetch('/send', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    username: username,\n                    text: message\n                })\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || 'Failed to send message');\n            }\n\n            console.log('Message sent successfully via WebSocket');\n\n        } else {\n            // WebSocket not connected, use polling method\n            console.log('WebSocket not connected, using polling fallback');\n            await sendMessagePolling(username, message, messageId);\n        }\n\n    } catch (error) {\n        console.error('Error sending message:', error);\n\n        // Mark message as failed\n        markMessageAsFailed(messageId);\n\n        showNotification(\n            error.message || 'Failed to send message. Please try again.',\n            'error'\n        );\n    }\n}\n\n// Fallback method for when WebSocket is not available\nasync function sendMessagePolling(username, message, messageId) {\n    try {\n        const response = await fetch('/send', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: username,\n                text: message\n            })\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.error || 'Failed to send message');\n        }\n\n        console.log('Message sent successfully via polling');\n\n    } catch (error) {\n        console.error('Error sending message via polling:', error);\n        throw error; // Re-throw to be handled by main function\n    }\n}\n\n// Enhanced addMessage function with message IDs\nfunction addMessage(username, text, isOwnMessage = false, isPending = false, messageId = null) {\n    const messageElement = document.createElement('div');\n    messageElement.className = `message-enter flex ${isOwnMessage ? 'justify-end' : 'justify-start'} mb-4`;\n\n    if (messageId) {\n        messageElement.setAttribute('data-message-id', messageId);\n    }\n\n    if (isPending) {\n        messageElement.classList.add('opacity-60');\n    }\n\n    const time = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    const userInitial = username.charAt(0).toUpperCase();\n\n    messageElement.innerHTML = `\n    <div class=\"flex items-start space-x-2 max-w-xs md:max-w-md ${isOwnMessage ? 'flex-row-reverse' : ''}\">\n    <div class=\"w-8 h-8 rounded-full ${isOwnMessage ? 'bg-indigo-500' : 'bg-purple-500'} flex items-center justify-center text-white text-sm font-semibold relative\">\n    ${userInitial}\n    ${isPending ? '<div class=\"absolute -top-1 -right-1 w-3 h-3 bg-yellow-400 rounded-full animate-pulse\"></div>' : ''}\n    </div>\n    <div>\n    <div class=\"${isOwnMessage ? 'bg-indigo-500 text-white rounded-2xl rounded-tr-none' : 'bg-white rounded-2xl rounded-tl-none shadow-sm'} px-4 py-3 relative ${isPending ? 'border-2 border-yellow-400 border-dashed' : ''}\">\n    <p>${escapeHtml(text)}</p>\n    ${isPending ? '<div class=\"absolute -bottom-2 right-2 text-yellow-500 text-xs\">Sending...</div>' : ''}\n    </div>\n    ${timestampToggle.checked ? `\n        <div class=\"flex items-center space-x-1 mt-1 text-xs text-gray-500 ${isOwnMessage ? 'justify-end' : ''}\">\n        <span>${isOwnMessage ? 'You' : escapeHtml(username)}</span>\n        <span>•</span>\n        <span>${time}</span>\n        </div>\n        ` : ''}\n        </div>\n        </div>\n        `;\n\n    messagesContainer.appendChild(messageElement);\n\n    // Remove pending state after a while if still pending\n    if (isPending) {\n        setTimeout(() => {\n            if (messageElement.classList.contains('opacity-60')) {\n                markMessageAsFailed(messageId);\n            }\n        }, 10000); // 10 second timeout\n    }\n}\n\n// Mark message as failed\nfunction markMessageAsFailed(messageId) {\n    const messageElement = document.querySelector(`[data-message-id=\"${messageId}\"]`);\n    if (messageElement) {\n        messageElement.classList.remove('opacity-60');\n        const pendingBadge = messageElement.querySelector('.absolute.-bottom-2');\n        if (pendingBadge) {\n            pendingBadge.textContent = 'Failed';\n            pendingBadge.classList.remove('text-yellow-500');\n            pendingBadge.classList.add('text-red-500');\n        }\n    }\n}\n\n// Poll for new messages from backend (fallback)\nasync function pollForMessages() {\n    // Don't poll if WebSocket is connected\n    if (chatSocket.isConnected) {\n        setTimeout(pollForMessages, 30000); // Check again in 30 seconds\n        return;\n    }\n\n    try {\n        const response = await fetch('/poll');\n        if (response.ok) {\n            const data = await response.json();\n\n            // Check if we have a new message\n            if (data.text && data.text !== lastPolledMessage) {\n                lastPolledMessage = data.text;\n                processPolledMessage(data.text);\n            }\n        }\n    } catch (error) {\n        console.error('Error polling messages:', error);\n    }\n\n    // Continue polling with reduced frequency when using fallback\n    setTimeout(pollForMessages, 5000); // Poll every 5 seconds in fallback mode\n}\n\n// Process messages received via polling\nfunction processPolledMessage(messageText) {\n    const messageMatch = messageText.match(/(\\d{2}:\\d{2}:\\d{2})?\\s*([^:]+):\\s*(.+)/);\n\n    if (messageMatch) {\n        const username = messageMatch[2].trim();\n        const messageContent = messageMatch[3].trim();\n\n        // Check if this is a system message (user joined/left)\n        if (messageText.includes('joined') || messageText.includes('left')) {\n            showNotification(messageText.replace(/^\\d{2}:\\d{2}:\\d{2}\\s*/, ''));\n\n            // Update user list for join/leave events\n            if (messageText.includes('joined')) {\n                const newUser = messageText.match(/(.+)\\s+joined/)[1].trim();\n                if (!users.includes(newUser) && newUser !== usernameInput.value.trim()) {\n                    users.push(newUser);\n                    updateUserList();\n                }\n            } else if (messageText.includes('left')) {\n                const leftUser = messageText.match(/(.+)\\s+left/)[1].trim();\n                const userIndex = users.indexOf(leftUser);\n                if (userIndex > -1) {\n                    users.splice(userIndex, 1);\n                    updateUserList();\n                }\n            }\n        } else {\n            // Regular chat message\n            const isOwnMessage = username === usernameInput.value.trim();\n\n            // Don't show own messages that were already shown optimistically\n            if (!isOwnMessage || !chatSocket.pendingMessages.has(messageContent)) {\n                addMessage(username, messageContent, isOwnMessage);\n\n                // Scroll to bottom\n                messagesContainer.scrollTop = messagesContainer.scrollHeight;\n\n                // Play notification sound for new messages from others\n                if (!isOwnMessage && soundToggle.checked) {\n                    playNotificationSound();\n                }\n            }\n\n            // Remove from pending if it was there\n            chatSocket.pendingMessages.delete(messageContent);\n        }\n    }\n}\n\n// Update user list function\nfunction updateUserList() {\n    if (!userList) return;\n\n    userList.innerHTML = `\n    <div class=\"flex items-center space-x-2 p-2 rounded-lg bg-blue-50\">\n    <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\n    <span class=\"font-medium\">You</span>\n    </div>\n    `;\n\n    users.forEach(user => {\n        const userElement = document.createElement('div');\n        userElement.className = 'flex items-center space-x-2 p-2 rounded-lg hover:bg-gray-50 transition-colors';\n        userElement.innerHTML = `\n        <div class=\"w-2 h-2 rounded-full bg-green-500\"></div>\n        <span class=\"text-sm\">${escapeHtml(user)}</span>\n        `;\n        userList.appendChild(userElement);\n    });\n\n    if (window.onlineCount) {\n        window.onlineCount.textContent = users.length + 1; // +1 for current user\n    }\n}\n\n// Add connection status indicator\nfunction updateConnectionStatus(connected) {\n    const statusIndicator = document.getElementById('connection-status') || createConnectionStatusIndicator();\n    statusIndicator.className = `w-3 h-3 rounded-full mr-2 ${connected ? 'bg-green-500' : 'bg-red-500'}`;\n    statusIndicator.title = connected ? 'Connected' : 'Disconnected';\n}\n\nfunction createConnectionStatusIndicator() {\n    const onlineDiv = document.querySelector('.flex.items-center.space-x-2.text-gray-600');\n    if (!onlineDiv) return null;\n\n    const statusElement = document.createElement('div');\n    statusElement.id = 'connection-status';\n    statusElement.className = 'w-3 h-3 rounded-full mr-2 bg-green-500';\n    statusElement.title = 'Connected';\n\n    onlineDiv.insertBefore(statusElement, onlineDiv.firstChild);\n    return statusElement;\n}\n\n\n// Make functions available globally\nwindow.sendMessage = sendMessage;\nwindow.chatSocket = chatSocket;\nwindow.updateUserList = updateUserList;\nwindow.usernameInput = usernameInput;\nwindow.onlineCount = onlineCount\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","lookup","i","chars","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","nextTick","Promise","resolve","then","setTimeoutFn","globalThisShim","self","window","Function","pick","attr","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","randomString","Date","now","Math","random","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","_polling","name","_poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","join","encodePayload","doWrite","uri","timestampRequests","timestampParam","sid","b64","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","unloadHandler","attachEvent","hasXHR2","newRequest","responseType","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","TransformStream","transform","controller","header","headerArray","DataView","getUint16","view","n","getUint32","pow","enqueue","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","arrayBuffer","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","setUint8","setUint16","setBigUint64","BigInt","pipeTo","_writer","getWriter","read","done","polling","assign","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","names","queryKey","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","c","utf8Length","ceil","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","Socket","map","filter","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","lastPolledMessage","users","userList","getElementById","onlineCount","usernameInput","debugLog","console","log","updateUserList","chatSocket","reconnectAttempts","maxReconnectAttempts","reconnectDelay","pendingMessages","Set","updateConnectionStatus","username","trim","startPollingFallback","showNotification","attemptReconnect","handleNewMessage","handleUserListUpdate","handleUserJoined","handleSystemMessage","isOwnMessage","has","text","addMessage","messagesContainer","scrollTop","scrollHeight","soundToggle","checked","playNotificationSound","delete","user","pollForMessages","clear","connectionStDisplay","isPending","messageId","messageElement","createElement","className","setAttribute","classList","time","toLocaleTimeString","hour","minute","userInitial","toUpperCase","innerHTML","escapeHtml","timestampToggle","appendChild","contains","markMessageAsFailed","querySelector","remove","pendingBadge","textContent","async","response","fetch","ok","json","messageText","messageMatch","match","messageContent","includes","newUser","leftUser","userIndex","processPolledMessage","userElement","statusIndicator","onlineDiv","statusElement","title","insertBefore","firstChild","createConnectionStatusIndicator","controls","body","addConnectionControls","sendMessage","messageInput","updateCharCount","typingIndicator","errorData","sendMessagePolling"],"sourceRoot":""}